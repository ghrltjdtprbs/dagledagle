name: Deploy to EC2 (Development)

on:
  push:
    branches: ["develop"]

jobs:
  deploy:
    name: Deploy Dev EC2
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}

      - name: Add EC2 to known_hosts
        run: |
          ssh-keyscan -H ${{ secrets.DEV_EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy to EC2 via SSH
        env:
          DB_HOST: ${{ secrets.DEV_DB_HOST }}
          DB_PORT: ${{ secrets.DEV_DB_PORT }}
          DB_USERNAME: ${{ secrets.DEV_DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DEV_DB_PASSWORD }}
          DB_DATABASE: ${{ secrets.DEV_DB_DATABASE }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
        run: |
          ssh ec2-user@${{ secrets.DEV_EC2_HOST }} '
            set -e

      

            # Git 설치
            if ! command -v git &> /dev/null; then
              sudo yum install -y git
            fi

            # 프로젝트 clone (없을 경우)
            if [ ! -d dagledagle ]; then
              git clone git@github.com:ghrltjdtprbs/dagledagle.git
            fi

            cd dagledagle
            git fetch origin
            git checkout -B develop origin/develop


            # 환경 변수 파일 생성
            echo "NODE_ENV=development" > .env.dev
            echo "DB_HOST=$DB_HOST" >> .env.dev
            echo "DB_PORT=$DB_PORT" >> .env.dev
            echo "DB_USERNAME=$DB_USERNAME" >> .env.dev
            echo "DB_PASSWORD=$DB_PASSWORD" >> .env.dev
            echo "DB_DATABASE=$DB_DATABASE" >> .env.dev
            echo "JWT_SECRET=$JWT_SECRET" >> .env.dev

            # Docker 배포
            docker-compose -f docker-compose.dev.yml down || true
            docker-compose -f docker-compose.dev.yml up -d --build
          '
