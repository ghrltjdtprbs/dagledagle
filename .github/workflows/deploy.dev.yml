name: Deploy to EC2 (Development)

on:
  push:
    branches: [ "develop" ]

jobs:
  deploy:
    name: Deploy Dev EC2
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}

      - name: Add EC2 to known_hosts
        run: |
          ssh-keyscan -H ${{ secrets.DEV_EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy to EC2 via SSH
        env:
          DEV_DB_HOST: ${{ secrets.DEV_DB_HOST }}
          DEV_DB_PORT: ${{ secrets.DEV_DB_PORT }}
          DEV_DB_USERNAME: ${{ secrets.DEV_DB_USERNAME }}
          DEV_DB_PASSWORD: ${{ secrets.DEV_DB_PASSWORD }}
          DEV_DB_DATABASE: ${{ secrets.DEV_DB_DATABASE }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
        run: |
          ssh ec2-user@${{ secrets.DEV_EC2_HOST }} <<EOF
            set -e

            if [ ! -d dagledagle ]; then
              git clone https://github.com/ghrltjdtprbs/dagledagle.git
            fi

            cd dagledagle
            git checkout dev
            git pull origin dev

            cat > .env.dev <<EOT
NODE_ENV=development
DEV_DB_HOST=$DEV_DB_HOST
DEV_DB_PORT=$DEV_DB_PORT
DEV_DB_USERNAME=$DEV_DB_USERNAME
DEV_DB_PASSWORD=$DEV_DB_PASSWORD
DEV_DB_DATABASE=$DEV_DB_DATABASE
JWT_SECRET=$JWT_SECRET
EOT

            docker compose -f docker-compose.dev.yml down || true
            docker compose -f docker-compose.dev.yml up -d --build
EOF
